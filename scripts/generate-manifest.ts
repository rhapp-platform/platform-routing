#!/usr/bin/env bun
/**
 * Build-time script to generate manifest rendering function from template
 * This avoids including the entire Handlebars library in the runtime bundle
 */

import { readFileSync } from "fs";
import { join, dirname } from "path";
import { fileURLToPath } from "url";

// Get the directory of this script
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Read the original template to convert it
const templatePath = join(__dirname, "../../render/templates/json/manifest.hbs");
const templateContent = readFileSync(templatePath, "utf-8");

// Convert Handlebars template to template literal
// Replace {{variable}} with ${variable}
const convertedTemplate = templateContent
  .replace(/\{\{(\w+)\}\}/g, '${$1}');

// Generate a lightweight function that doesn't need Handlebars at runtime
const generatedCode = `// Auto-generated from json/manifest.hbs template
// DO NOT EDIT - Generated by scripts/generate-manifest.ts

interface RenderManifestProps {
  ag: string;
  an: string;
  color: string;
}

export default function renderManifest({ ag, an, color }: RenderManifestProps): string {
  return \`${convertedTemplate}\`;
}
`;

// Write the generated file
await Bun.write("./src/renderManifest.generated.ts", generatedCode);

console.log("âœ… Generated renderManifest.generated.ts from template");